@model MigracionTalentoExtranjero.Models.Catalogs.CatalogoGeneral
@{

}
<div>
    <p>
        <img src="~/Assets/logo_ocesa.png" height="100px" />
        <button type="button" onclick="mostrarModalVacio()" class="btn btn-info" text-align:right;>CREAR NUEVO ELEMENTO</button>
    </p>
</div>
<div class="panel panel-default">
    <!-- Default panel contents -->

    <div class="panel-heading">CATÁLOGO DE EVENTOS </div>
    <div class="panel-body">
        <!-- Table -->
        <table class="table" id="registerFound">
            <tr>
                <th>IDENTIFICADOR</th>
                <th>DESCRIPCIÓN</th>
                <th>EMPRESA</th>
                <th>CORREOS CC</th>
                <th>Eliminar</th>
                <th>EDICIÓN</th>
            </tr>
            @foreach (MigracionTalentoExtranjero.Models.Catalogs.CatalogoGeneral registro in ViewBag.CatalogList)
            {
                <tr>
                    <td style="vertical-align:middle;">@registro.Id</td>
                    <td style="vertical-align:middle;">@registro.Descripcion</td>
                    <td style="vertical-align:middle;">@registro.AtributoAdicionalStr1</td>
                    <td style="vertical-align:middle;">@registro.AtributoAdicionalStr2</td>
                    <td>
                        <button type="button" id="btn_elimina_@registro.Id" onclick="eliminar(this.id)" class="glyphicon glyphicon-remove-sign"></button>
                    </td>
                    <td style="vertical-align:middle;"><button type="button" class="glyphicon glyphicon-pencil" id="open_register_@registro.Id" onclick="mostrarModal(this.id)"> Editar</button></td>
                </tr>
            }
        </table>
    </div>

</div>

@*MODAL EDITAR ---------------------------------------------*@
<div class="contenedor-modales" id="container">
    <div class="contenido-modal2">
        <div class="p-2" style="width:30px; float: right; margin-top:10px;">
            <span onclick="cerrarModal()" style="cursor: pointer; color: crimson; font-weight:bold; font-size:14px;">X</span>
        </div>
        <div id="modalEditarRegistroMensajeError"></div>
        <div class="contenido-modal-grupos">
            <div class="row">
                <div class="col-xs-8 col-sm-12 col-md-12 col-lg-12">
                    <h1 class="folio-editar"></h1>
                </div>
            </div>
            <hr>
            <p class="subtitulos-modal">Datos de catálogo</p>
            <hr>
            @Html.HiddenFor(m => m.Id)
            <div class="row">
                <div class="col-xs-8 col-sm-12 col-md-12 col-lg-12">
                    <div class="input-group">
                        <span class="input-group-addon">Descripción:</span>
                        @Html.TextBoxFor(m => m.Descripcion, new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="input-group">
                        <span class="input-group-addon">Tipo de Evento:</span>
                        @Html.DropDownListFor(m => m.AtributoAdicionalStr1, (List<SelectListItem>)ViewBag.CompaniasList, new { @class = "form-control", required = "required" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="input-group">
                        <span class="input-group-addon">Fecha inicio:</span>
                        @Html.TextBoxFor(m => m.AtributoAdicional1Dte, new { @class = "form-control", required = "required", type = "date" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="input-group">
                        <span class="input-group-addon">Fecha Fin:</span>
                        @Html.TextBoxFor(m => m.AtributoAdicional2Dte, new { @class = "form-control", required = "required", type = "date" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="input-group">
                        <span class="input-group-addon">Inmueble del Evento:</span>
                        @Html.DropDownListFor(m => m.AtributoAdicionalStr2, (List<SelectListItem>)ViewBag.InmueblesList, new { @class = "form-control", required = "required" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="input-group">
                        <span class="input-group-addon">Dirección:</span>
                        @Html.TextBoxFor(m => m.AtributoAdicionalStr3, new { @class = "form-control", required = "required", type = "text" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="input-group">
                        <span class="input-group-addon">Email para enviar copia 1:</span>
                        @Html.TextBoxFor(m => m.AtributoAdicionalStr4, new { @class = "form-control", type = "text" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="input-group">
                        <span class="input-group-addon">Email para enviar copia 2:</span>
                        @Html.TextBoxFor(m => m.AtributoAdicionalStr5, new { @class = "form-control", type = "text" })
                    </div>
                </div>
            </div>
            <button onclick="GuardarCatalogo()" class="btn-block">Guardar Cambios</button>
        </div>
    </div>
</div>



<div class="contenedor-modales" id="containerAlert">
    <div class="contenido-modal2">
        <div class="p-2" style="width:30px; float: right; margin-top:10px;">
            <span onclick="cerrarModalAlert()" style="cursor: pointer; color: crimson; font-weight:bold; font-size:14px;">X</span>
        </div>
        <div class="contenido-modal-grupos">
            <hr>
            <p class="subtitulos-modal">Resultado</p>
            <hr>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div id="modalAlertMessageResult"></div>
                </div>
            </div>
            <button onclick="cerrarModalAlert()" class="btn-block">Cerrar</button>
        </div>
    </div>
</div>






<script type="text/javascript">

    let accionCRUD = '';
    let popupAlert = document.getElementById('containerAlert');
    let accionPopupAlert = '';
    

    function obtenerIdDelFinal(myIdString) {

        let arrSplit = myIdString.split('_');
        let currentId = arrSplit[arrSplit.length - 1];
        return currentId;
    }


    document.addEventListener("DOMContentLoaded", function () {
        hideLoader();
        
        
    });





    async function eliminar(clicked_id) {
        let idRegistro = obtenerIdDelFinal(clicked_id);
        
        if (confirm(`¿Seguro que desea eliminar el registro ${idRegistro}?`)) {
            showLoader();
        
            let url = "@Url.Content("~/Catalogs/EliminarElementoCatalogo")";

            let params =
                {
                Id: idRegistro,
                NombreCatalogo:"EVENTO"
                };

            const response = httpPost(
                url,
                params
            );
            const dataResponse = await response
                .then(data => {
                    return data;
                })
                .catch(error => {
                    console.log("Cayo a Catch: ",error);
                });

            if (dataResponse.response === false) {
                setErrorMessageForm(dataResponse.message, 'modalAlertMessageResult');
                popupAlert.classList.add('show');
            }
            else {
                setSuccessMessageForm(dataResponse.message, 'modalAlertMessageResult');
                popupAlert.classList.add('show');
                accionPopupAlert = 'REFRESCAR';
            }
            hideLoader();
        } 
    }



    async function mostrarModalVacio() {

        let popup = document.getElementById('container');

        accionCRUD = "CREAR";
        popup.classList.add('show');


    }

    async function mostrarModal(clicked_id) {
        showLoader();
        let idRegistro = obtenerIdDelFinal(clicked_id);

        let url = "@Url.Content("~/Catalogs/ObtenerElementoCatalogo")";

        let params =
        {
            Id: idRegistro,
            NombreCatalogo: "EVENTO"
        };

        const response = httpPost(
            url,
            params
        );
        const dataResponse = await response
            .then(data => {
                return data;
            })
            .catch(error => {
                console.log(error);
            });


        if (dataResponse.response === false) {
            let messageError = dataResponse.message;
            //setErrorMessageForm(messageError, 'modalEditarRegistroMensajeError');
            setErrorMessageForm(messageError, 'modalAlertMessageResult');
            popupAlert.classList.add('show');
        }
        else {
            let descripcion = document.getElementById("Descripcion");
            let id = document.getElementById("Id");
            let AtributoAdicionalStr1 = document.getElementById("AtributoAdicionalStr1");
            let AtributoAdicional1Dte = document.getElementById("AtributoAdicional1Dte");
            let AtributoAdicional2Dte = document.getElementById("AtributoAdicional2Dte");
            let AtributoAdicionalStr2 = document.getElementById("AtributoAdicionalStr2");
            let AtributoAdicionalStr3 = document.getElementById("AtributoAdicionalStr3");
            /** Se agregan para email 1 y 2 */
            let AtributoAdicionalStr4 = document.getElementById("AtributoAdicionalStr4");
            let AtributoAdicionalStr5 = document.getElementById("AtributoAdicionalStr5");
            // console.log(dataResponse);

            descripcion.value = dataResponse.result.Descripcion;
            id.value = dataResponse.result.Id;
            AtributoAdicionalStr1.value = dataResponse.result.AtributoAdicionalStr1;
            AtributoAdicionalStr2.value = dataResponse.result.AtributoAdicionalStr2;
            AtributoAdicionalStr3.value = dataResponse.result.AtributoAdicionalStr3;
            /** Se agregan para email 1 y 2 */
            AtributoAdicionalStr4.value = dataResponse.result.AtributoAdicionalStr4;
            AtributoAdicionalStr5.value = dataResponse.result.AtributoAdicionalStr5;

            let borrarFecha1 = true;
            if (dataResponse.result.AtributoAdicional1Dte !== undefined && dataResponse.result.AtributoAdicional1Dte !== null) {
                if (dataResponse.result.AtributoAdicional1Dte.length >= 10) {
                    let dateStr = dataResponse.result.AtributoAdicional1Dte.substring(0, 10);
                    let newFormatDate = formatDate(dateStr);
                    AtributoAdicional1Dte.value = newFormatDate;
                    borrarFecha1 = false;
                }
            }

            if (borrarFecha1)
                AtributoAdicional1Dte.value = '';


            let borrarFecha2 = true;
            if (dataResponse.result.AtributoAdicional2Dte !== undefined && dataResponse.result.AtributoAdicional2Dte !== null) {
                if (dataResponse.result.AtributoAdicional2Dte.length >= 10) {
                    let dateStr = dataResponse.result.AtributoAdicional2Dte.substring(0, 10);
                    let newFormatDate = formatDate(dateStr);
                    AtributoAdicional2Dte.value = newFormatDate;
                    borrarFecha2 = false;
                }
            }

            if (borrarFecha2)
                AtributoAdicional2Dte.value = '';
            

            accionCRUD = "MODIFICAR";

            let popup = document.getElementById('container');
            popup.classList.add('show');
        }

        hideLoader();

    }

    function formatDate(date) {
        console.log('Fecha de la funcion: ', date);
        let arrDate = date.split('/');

        let day = arrDate[0];
        let month = arrDate[1];
        let year = arrDate[2];


        return [year, month, day].join('-');
    }


    function cerrarModal() {
        console.log("CLIC EN CERRAR")
        let popup = document.getElementById('container');
        popup.classList.remove('show');
    }

    function cerrarModalAlert() {
        popupAlert.classList.remove('show');
        evaluaAccionPopUpAlert(accionPopupAlert);
    }


    async function GuardarCatalogo() {
        showLoader();
        let url = "";
        if (accionCRUD === "CREAR") {
            url = "@Url.Content("~/Catalogs/CreaNuevoElementoCatalogo")";
        }
        else if (accionCRUD === "MODIFICAR") {
            url = "@Url.Content("~/Catalogs/ActualizarElementoCatalogo")";
        }
        else
            return;

        let idRegistro = document.getElementById("Id");
        let descripcion = document.getElementById("Descripcion");
        let AtributoAdicionalStr1 = document.getElementById("AtributoAdicionalStr1");
        let AtributoAdicional1Dte = document.getElementById("AtributoAdicional1Dte");
        let AtributoAdicional2Dte = document.getElementById("AtributoAdicional2Dte");
        let AtributoAdicionalStr2 = document.getElementById("AtributoAdicionalStr2");
        let AtributoAdicionalStr3 = document.getElementById("AtributoAdicionalStr3");
        /** Se agregan para email 1 y 2 */
        let AtributoAdicionalStr4 = document.getElementById("AtributoAdicionalStr4");
        let AtributoAdicionalStr5 = document.getElementById("AtributoAdicionalStr5");

        if (isANullOrEmptyString(AtributoAdicionalStr2.value) || AtributoAdicionalStr2.value === '0') {
            setErrorMessageForm("Debe seleccionar un Inmueble para continuar", 'modalAlertMessageResult');
            popupAlert.classList.add('show');
            hideLoader();
            return;
        }
        else if (isANullOrEmptyString(AtributoAdicionalStr3.value)) {
            setErrorMessageForm("Debe ingresar una Dirección para continuar", 'modalAlertMessageResult');
            popupAlert.classList.add('show');
            hideLoader();
            return;
        }



        let params =
        {
            Id: idRegistro.value,
            NombreCatalogo: "EVENTO",
            Descripcion: descripcion.value,
            AtributoAdicionalStr1: AtributoAdicionalStr1.value,
            AtributoAdicional1Dte: AtributoAdicional1Dte.value,
            AtributoAdicional2Dte: AtributoAdicional2Dte.value,
            AtributoAdicionalStr2: AtributoAdicionalStr2.value,
            AtributoAdicionalStr3: AtributoAdicionalStr3.value,
            AtributoAdicionalStr4: AtributoAdicionalStr4.value,
            AtributoAdicionalStr5: AtributoAdicionalStr5.value,
        };

        const response = httpPost(
            url,
            params
        );
        const dataResponse = await response
            .then(data => {
                return data;
            })
            .catch(error => {
                console.log(error);
            });

        let popup = document.getElementById('container');
        popup.classList.remove('show');
        if (dataResponse.response === false) {
            //setErrorMessageForm(message, 'modalEditarRegistroMensajeError');
            setErrorMessageForm(dataResponse.message, 'modalAlertMessageResult');
        }
        else {
            idRegistro.value = '';
            descripcion.value = '';
            setSuccessMessageForm(dataResponse.message, 'modalAlertMessageResult');
            accionPopupAlert = 'REFRESCAR';
        }
        popupAlert.classList.add('show');
        hideLoader();
    }


    function evaluaAccionPopUpAlert(accion) {
        switch (accion) {
            case 'REFRESCAR':
                window.location.reload();
                break;
            default:
                return;
                break;
        }
    }

</script>