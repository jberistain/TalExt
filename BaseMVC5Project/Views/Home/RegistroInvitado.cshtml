@model MigracionTalentoExtranjero.Models.Home.RegistroInvitadoModel
@{

}
<script src="https://www.google.com/recaptcha/api.js?hl=@Model.IdiomaActual" async defer></script>
<div id="registro">
    <h1 class="page-header text-center">@Model.LabelTituloRegistro</h1>
    <div class="row">
        @using (Html.BeginForm("", "", FormMethod.Post, new { id = "frm-registro-invitado" }))
        {
            @Html.HiddenFor(m => m.IdiomaActual)
            <!-- PASAPORTE-->
            <div class="col-xs-12 col-sm-12 col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">@Model.LabelSeccionPasaporte</div>
                    <div id="responseMessage"></div>
                    <div class="panel-body">
                        <div class="container">
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12">
                                    <div class="">
                                        <div class="form-group">
                                            <label>* @Model.LabelNumPasaporte</label>
                                            @Html.TextBoxFor(m => m.NumeroPasaporte, new { @class = "form-control",  required = "required" })
                                            @Html.ValidationMessageFor(m => m.NumeroPasaporte, null, new { @class = "label label-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-3">
                                    <div class="form-group">
                                        <label>* @Model.LabelFechaExpedicion</label>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-3 col-md-3">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaDia</span>
                                            @Html.DropDownListFor(m => m.DiaExpPas, (List<SelectListItem>)ViewBag.DiasList, new { @class = "form-control", style = "position:initial", required = "required" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-3 col-md-3">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaMes</span>
                                            @Html.DropDownListFor(m => m.MesExpPas, (List<SelectListItem>)ViewBag.MesList, new { @class = "form-control", style = "position:initial", required = "required" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-3 col-md-3">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaAnio</span>
                                            @Html.DropDownListFor(m => m.AnioExpPas, (List<SelectListItem>)ViewBag.AniosPasadoList, new { @class = "form-control", style = "position:initial", required = "required" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">

                                <div class="col-xs-12 col-sm-12 col-md-3">
                                    <div class="form-group">
                                        <label>* @Model.LabelFechaVencimiento</label>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-3 col-md-3">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaDia</span>
                                            @Html.DropDownListFor(m => m.DiaVenPas, (List<SelectListItem>)ViewBag.DiasList, new { @class = "form-control", style = "position:initial", required = "required" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-3 col-md-3">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaMes</span>
                                            @Html.DropDownListFor(m => m.MesVenPas, (List<SelectListItem>)ViewBag.MesList, new { @class = "form-control", style = "position:initial", required = "required" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-3 col-md-3">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaAnio</span>
                                            @Html.DropDownListFor(m => m.AnioVenPas, (List<SelectListItem>)ViewBag.AniosFuturoList, new { @class = "form-control", style = "position:initial", required = "required" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="">
                                        <div class="form-group">
                                            <label>* @Model.LabelNacionalidad</label>
                                            @*@Html.DropDownListFor(m => m.Nacionalidad, (List<SelectListItem>)ViewBag.NacionalidadesList, new { @class = "form-control", style = "position:initial", required = "required" })*@
                                            @Html.Raw(ViewBag.HTMLNacionalidades)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- FIN PASAPORTE-->


            <!-- DATOS DEL EXTRANJERO VISITANTE-->
            <div class="col-xs-12 col-sm-12 col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">@Model.LabelSeccionDatosExtranjeroVisitante</div>
                    <div id="responseMessage"></div>
                    <div class="panel-body">
                        <div class="container">

                            <div class="row">
                                <div class="col-xs-6 col-sm-6 col-md-6">
                                    <div class="form-group">
                                        <label>* @Model.LabelEmpresa</label>
                                        @Html.DropDownListFor(m => m.Empresa, (List<SelectListItem>)ViewBag.CompaniasList, new { @class = "form-control", required = "required", @onchange = "validarEmpresaSeleccionada()" })
                                    </div>
                                </div>

                                <div class="col-xs-6 col-sm-6 col-md-6" id="seccionNuevaEmpresa" hidden>
                                    <div class="form-group">
                                        <label>* @Model.LabelEmpresa</label>
                                        @Html.TextBoxFor(m => m.NuevaEmpresa, new { @class = "form-control", style = "position:initial" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12">
                                    <div class="form-group">
                                        <label>* @Model.LabelNombrePasaporte</label>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-6">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="basic-addon1">@Model.LabelNombre</span>
                                            @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", style = "position:initial; width:400;", required = "required" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-6">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="basic-addon1">@Model.LabelApellidos</span>
                                            @Html.TextBoxFor(m => m.Apellidos, new { @class = "form-control", style = "position:initial;  width:400;", required = "required" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12">
                                    <div class="form-group">
                                        <label>@Model.LabelSexo</label>
                                        @Html.DropDownListFor(m => m.Sexo, (List<SelectListItem>)ViewBag.GenerosList, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-6">
                                    <div class="form-group">
                                        <label>* @Model.LabelCorreoElectronico</label>
                                        @Html.TextBoxFor(m => m.Correo, new { @class = "form-control", type = "email", required = "required" })
                                        @Html.ValidationMessageFor(m => m.NumeroPasaporte, null, new { @class = "label label-danger" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-6">
                                    <div class="form-group">
                                        <label>* @Model.LabelConfirmaCorreoElectronico</label>
                                        @Html.TextBoxFor(m => m.ConfirmacionCorreo, new { @class = "form-control", type = "email", required = "required" })
                                        @Html.ValidationMessageFor(m => m.NumeroPasaporte, null, new { @class = "label label-danger" })
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- FIN DATOS DEL EXTRANJERO VISITANTE-->

            <!-- PAIS DE NACIMIENTO-->
            <div class="col-xs-12 col-sm-12 col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">@Model.LabelSeccionPaisNacimiento</div>
                    <div id="responseMessage"></div>
                    <div class="panel-body">
                        <div class="container">
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12">
                                    <div class="form-group">
                                        <label>* @Model.LabelPaisNacimiento</label>
                                        @Html.DropDownListFor(m => m.PaisNacimiento, (List<SelectListItem>)ViewBag.PaisesList, new { @class = "form-control", required = "required" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- FIN PAIS DE NACIMIENTO-->

            <!-- INFORMACIÓN ADICIONAL DEL EXTRANJERO QUE NOS VISITA-->
            <div class="col-xs-12 col-sm-12 col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">@Model.LabelSeccionInformacionAdicional</div>
                    <div id="responseMessage"></div>
                    <div class="panel-body">
                        <div class="container">

                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12">
                                    <div class="form-group">
                                        <label>@Model.LabelActividadPaisResidencia</label>
                                        @Html.TextBoxFor(m => m.ActividadPaisResidencia, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.NumeroPasaporte, null, new { @class = "label label-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-5">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="basic-addon1">@Model.LabelExpulsadoDeMexico</span>
                                            @Html.DropDownListFor(m => m.FueExpulsadoDeMexico, (List<SelectListItem>)ViewBag.ExpulsadoSiNoList, new { @class = "form-control", style = "position:initial", @onchange = "validarAntecedentesExpulsionSeleccionada()" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-6">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="basic-addon1">@Model.LabelAntecedentesPenalesMexico</span>
                                            @Html.DropDownListFor(m => m.AntecedentesPenalesEnMexico, (List<SelectListItem>)ViewBag.AntecedentesSiNoList, new { @class = "form-control", style = "position:initial", @onchange = "validarAntecedentesExpulsionSeleccionada()" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-6" id="seccionAntecedentesExpulsion" hidden>
                                    <div class="form-group">
                                        <label>@Model.LabelExplicacionAntecedentesExpulsion</label>
                                        @Html.TextBoxFor(m => m.ExplicacionAntecedentesExpulsion, new { @class = "form-control", style = "position:initial" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12">
                                    <div class="form-group">
                                        <label>
                                            * @Model.LabelActividadEnMexico
                                        </label>
                                        @Html.TextBoxFor(m => m.ActividadEnMexico, new { @class = "form-control", required = "required" })
                                        @Html.ValidationMessageFor(m => m.ActividadEnMexico, null, new { @class = "label label-danger" })
                                    </div>
                                </div>
                            </div>
                            <div id="eventsSection">
                                @for (int index = 0; index < Model.Eventos.Count; index++)
                                {
                                    <div class="panel panel-info" id="panel_evento_@index" style="margin-right: 60px;">
                                        <div class="row">
                                            <div class="col-xs-12 col-sm-12 col-md-12">
                                                <div class="form-group">
                                                    <label>* @Model.LabelNombreEvento</label>
                                                    @Html.DropDownListFor(m => m.Eventos[index].NombreEvento, (List<SelectListItem>)ViewBag.EventosList, new { @class = "form-control", style = "position:initial", required = "required", onchange = "loadDateEvent(id)" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-12 col-sm-6 col-md-6">
                                                <div class="form-group">
                                                    <label>* @Model.LabelInmueble</label>
                                                    @Html.DropDownListFor(m => m.Eventos[index].InmuebleEvento, (List<SelectListItem>)ViewBag.InmueblesList, new { @class = "form-control", style = "position:initial", required = "required", onchange = "newEstate(id)" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-6 col-md-5" id="seccionNuevoInmueble_@index" hidden>
                                                <div class="form-group">
                                                    <label>@Model.LabelInmueble</label>
                                                    @Html.TextBoxFor(m => m.Eventos[index].NuevoInmuebleEvento, new { @class = "form-control", style = "position:initial", @onchange = "validarInmuebleSeleccionado()" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-12 col-sm-12 col-md-12">
                                                <div class="form-group">
                                                    <label>* @Model.LabelLocation</label>
                                                    @Html.TextBoxFor(m => m.Eventos[index].UbicacionInmueble, new { @class = "form-control", required = "required" })
                                                    @Html.ValidationMessageFor(m => m.Eventos[index].UbicacionInmueble, null, new { @class = "label label-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-12 col-sm-12 col-md-3">
                                                <div class="form-group">
                                                    <label>@Model.LabelFechaInicioEvento</label>
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3 col-md-3">
                                                <div class="form-group">
                                                    <div class="input-group">
                                                        <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaDia</span>
                                                        @Html.DropDownListFor(m => m.Eventos[index].DiaInicioEvento, (List<SelectListItem>)ViewBag.DiasList, new { @class = "form-control", style = "position:initial", required = "required" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3 col-md-3">
                                                <div class="form-group">
                                                    <div class="input-group">
                                                        <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaMes</span>
                                                        @Html.DropDownListFor(m => m.Eventos[index].MesInicioEvento, (List<SelectListItem>)ViewBag.MesList, new { @class = "form-control", style = "position:initial", required = "required" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3 col-md-3">
                                                <div class="form-group">
                                                    <div class="input-group">
                                                        <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaAnio</span>
                                                        @Html.DropDownListFor(m => m.Eventos[index].AnioInicioEvento, (List<SelectListItem>)ViewBag.AniosList, new { @class = "form-control", style = "position:initial", required = "required" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-12 col-sm-12 col-md-3">
                                                <div class="form-group">
                                                    <label>@Model.LabelFechaFinEvento</label>
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3 col-md-3">
                                                <div class="form-group">
                                                    <div class="input-group">
                                                        <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaDia</span>
                                                        @Html.DropDownListFor(m => m.Eventos[index].DiaFinEvento, (List<SelectListItem>)ViewBag.DiasList, new { @class = "form-control", style = "position:initial", required = "required" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3 col-md-3">
                                                <div class="form-group">
                                                    <div class="input-group">
                                                        <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaMes</span>
                                                        @Html.DropDownListFor(m => m.Eventos[index].MesFinEvento, (List<SelectListItem>)ViewBag.MesList, new { @class = "form-control", style = "position:initial", required = "required" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3 col-md-3">
                                                <div class="form-group">
                                                    <div class="input-group">
                                                        <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaAnio</span>
                                                        @Html.DropDownListFor(m => m.Eventos[index].AnioFinEvento, (List<SelectListItem>)ViewBag.AniosFuturoList, new { @class = "form-control", style = "position:initial", required = "required" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-3">
                                    <button type="button" class="btn btn-default" onclick="AgregaNuevoEvento()">@Model.LabelAgregarOtroEvento</button>
                                </div>
                            </div>
                            <br />


                        </div>
                    </div>
                </div>
            </div>
            <!-- FIN INFORMACIÓN ADICIONAL DEL EXTRANJERO QUE NOS VISITA-->

            <!-- INFORMACIÓN DE INGRESO AL PAÍS-->
            <div class="col-xs-12 col-sm-12 col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">@Model.LabelSeccionInformacionIngresoAlPais</div>
                    <div id="responseMessage"></div>
                    <div class="panel-body">
                        <div class="container">
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-3">
                                    <div class="form-group">
                                        <label>* @Model.LabelFechaLlegada</label>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-3 col-md-3">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaDia</span>
                                            @Html.DropDownListFor(m => m.DiaEntrada, (List<SelectListItem>)ViewBag.DiasList, new { @class = "form-control", style = "position:initial", required = "required" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-3 col-md-3">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaMes</span>
                                            @Html.DropDownListFor(m => m.MesEntrada, (List<SelectListItem>)ViewBag.MesList, new { @class = "form-control", style = "position:initial", required = "required" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-3 col-md-3">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaAnio</span>
                                            @Html.DropDownListFor(m => m.AnioEntrada, (List<SelectListItem>)ViewBag.AniosFuturoList, new { @class = "form-control", style = "position:initial", required = "required" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-3">
                                    <div class="form-group">
                                        <label>* @Model.LabelFechaSalida</label>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-3 col-md-3">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaDia</span>
                                            @Html.DropDownListFor(m => m.DiaSalida, (List<SelectListItem>)ViewBag.DiasList, new { @class = "form-control", style = "position:initial", required = "required" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-3 col-md-3">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaMes</span>
                                            @Html.DropDownListFor(m => m.MesSalida, (List<SelectListItem>)ViewBag.MesList, new { @class = "form-control", style = "position:initial", required = "required" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-3 col-md-3">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <span class="input-group-addon" id="basic-addon1">@Model.LabelFechaAnio</span>
                                            @Html.DropDownListFor(m => m.AnioSalida, (List<SelectListItem>)ViewBag.AniosFuturoList, new { @class = "form-control", style = "position:initial", required = "required" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <label>@Model.LabelMensajeVuelo</label>
                            <div class="row">
                                <div class="col-xs-12 col-sm-6 col-md-6">
                                    <div class="form-group">
                                        <label>@Model.LabelAeropuertoLlegada</label>
                                        @Html.DropDownListFor(m => m.AeropuertoLlegada, (List<SelectListItem>)ViewBag.AeropuertosList, new { @class = "form-control", @onchange = "validarAeropuertoSeleccionada()" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-6" id="seccionNuevoAeropuerto" hidden>
                                    <div class="form-group">
                                        <label>@Model.LabelAeropuertoLlegada</label>
                                        @Html.TextBoxFor(m => m.NuevoAeropuerto, new { @class = "form-control", style = "position:initial" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-2">
                                    <div class="form-group">
                                        <label>@Model.LabelVuelo</label>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-5">
                                    <div class="form-group">
                                        <label>@Model.LabelAerolinea</label>
                                        @Html.DropDownListFor(m => m.Aerolinea, (List<SelectListItem>)ViewBag.AerolineasList, new { @class = "form-control", style = "position:initial", @onchange = "validarAerolineaSeleccionada()" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-5" id="seccionNuevaAerolinea" hidden>
                                    <div class="form-group">
                                        <label>@Model.LabelAerolinea</label>
                                        @Html.TextBoxFor(m => m.NuevaAerolinea, new { @class = "form-control", style = "position:initial" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-md-offset-2">
                                    <div class="form-group">
                                        <label>@Model.LabelNumeroVuelo</label>
                                        @Html.TextBoxFor(m => m.NumeroVuelo, new { @class = "form-control", style = "position:initial" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-12 col-md-12">
                                <div class="form-group">
                                    <div style="text-align:center;">
                                        <button type="submit" id="btnFormSubmit" class="btn btn-success"><span class="glyphicon glyphicon-modal-window"></span> @Model.LabelEnviarBtn</button>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-12 col-md-12">
                                <div id="mensajeError"></div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <!-- FIN INFORMACIÓN DEL VUELO DE LLEGADA-->

            <!-- MODAL -->
            <div id="ventanaModal" class="modal-aviso">
                <div class="contenido-modal">
                    <span class="close-modal" onclick="closeModal()">&times;</span>
                    <div class="page-header">
                        <h2>@Model.LabelTituloAvisoPrivacidad</h2>
                    </div>
                    <div class="well" style="max-width: 100%; width: 100%; min-height: 40vh; height: 40vh; text-align: center;">
                        @*<textarea style="border-radius: 1%; max-width: 560px; width: 100%; max-height: 410px; height: 100%; border: ridge; resize: none;" readonly>@ViewBag.AvisoPrivacidadActual</textarea>*@
                        <div  id="avisoPrivacidadContenido" style="border-radius: 1%; max-width: 560px; width: 100%; max-height: 410px; height: 100%; border: ridge; resize: none; text-align: justify; overflow: auto; display: inline-block; padding: 10px; " readonly>@ViewBag.AvisoPrivacidadActual</div>
                    </div>
                    <div class="row">
                        <div class="col-xs-6 col-sm-6 col-md-4 col-lg-4">
                            <input type="checkbox" id="aceptaAvisoPrivacidad" onclick="avisoPrivacidadCheckEvent()" />
                            <span class="label label-info"><label for="aceptaAvisoPrivacidad">@Model.LabelCheckAvisoPrivacidad</label></span>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-8 col-lg-8">
                            <div id="alertaPoliticaPrivacidad"></div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6" style="text-align:center;">
                            <button type="button" class="btn btn-danger" onclick="closeModal()">@Model.LabelBotonCancelaAvisoPrivacidad</button>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6" style="text-align:center;">
                            <button type="button" onclick="enviarFormulario()" class="btn btn-success" id="btnEnviarAvisoPrivacidad" disabled>@Model.LabelBotonAceptaAvisoPrivacidad</button>
                        </div>
                        <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6" style="text-align:center;">
                            <div id="g-captcha" data-type="image">
                            </div>
                            <input type="hidden" id="foo" name="foo" />

                        </div>

                    </div>
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12" style="text-align:center;">
                            <div id="messageErrorModal"></div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- FIN MODAL -->

        }
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script type="text/javascript">

    let formSubmitTried = false;

    var onloadCallback = function () {
        grecaptcha.render('g-captcha', {
            'sitekey': '6LfuWfclAAAAAJCfMxdvBAptMDrQtSRItDvsWB_X',
            'callback': reCaptchaCallback,
            theme: 'light', //light or dark
            type: 'image',// image or audio
            size: 'normal'//normal or compact
        });
    };

    let elementoCheck = document.getElementById("aceptaAvisoPrivacidad");
    let btn = document.getElementById("btnEnviarAvisoPrivacidad");

    let req = "";

    var reCaptchaCallback = function (response) {
        if (response !== '') {
            document.getElementById("foo").value=response;
            console.log(response);
             req = response;
            btn.disabled = false;
        }
    };


    document.addEventListener("DOMContentLoaded", function () {

        const generarLDeAP = () =>
        {
            const ap = document.getElementById("avisoPrivacidadContenido");
            const texto = ap.innerText;
            var textoReemplazado = (texto.replaceAll(/\[(.*?)\]\((.*?)\)/g, '<a href="$2" target="_blank">$1</a>')).replaceAll('\n','<br>');

            ap.innerHTML = textoReemplazado;
        }

        generarLDeAP();

        document.getElementById("btnFormSubmit").addEventListener("click", function (event) {

            console.log("Se entro a la funcion de validando ")
            let camposRequeridosVacios = validaCamposRequeridos();
            if (isANullOrEmptyString(camposRequeridosVacios)) {
                console.log("El formulario es validoooo");
                formularioValido = true;
            } else {
                const lenguajeAct = document.getElementById("IdiomaActual").value;
                let message = lenguajeAct === "ES" ? 'Debe llenar los campos requeridos: ' : 'You must fill in the required fields: ';
                message += camposRequeridosVacios;
                setErrorMessageForm(message, 'mensajeError');
                formSubmitTried = true;
            }
        });


        var form = document.getElementById("frm-registro-invitado");
        form.addEventListener("input", function () {
            console.log("Form has changed!");
            if (formSubmitTried) {
                let camposRequeridosVacios = validaCamposRequeridos();
                if (isANullOrEmptyString(camposRequeridosVacios)) {
                    cleanElementHTML('mensajeError');
                } else {
                    const lenguajeAct = document.getElementById("IdiomaActual").value;
                    let message = lenguajeAct === "ES" ? 'Debe llenar los campos requeridos: ' : 'You must fill in the required fields: ';
                    message += camposRequeridosVacios;
                    setErrorMessageForm(message, 'mensajeError');
                }
            }
        });


    });

    let idiomaActualValue = document.getElementById("IdiomaActual").value;
    let mensaje0 = idiomaActualValue === "ES" ? "La fecha de expiración del pasaporte no debe ser mayor o igual a la fecha de expedición" : "The expiration date of the passport must not be greater than or equal to the date of issue";
    let mensaje1 = idiomaActualValue === "ES" ? "La fecha de inicio del evento no debe ser mayor a la fecha término del evento" : "The start date of the event must not be greater than the end date of the event";
    let mensaje2 = idiomaActualValue === "ES" ? "La fecha de llegada no debe ser mayor a la fecha de salida" : "The arrival date must not be later than the departure date";
    let mensaje3 = idiomaActualValue === "ES" ? "La fecha de llegada no debe ser menor a la fecha actual" : "The arrival date must not be earlier than the current date";
    let banderaFecha0 = false;
    let banderaFecha1 = false;
    let banderaFechaOpcional = false;
    let dia;
    let mes;
    const auxiliarFechaActual = new Date();
    const fechaActual = new Date(auxiliarFechaActual.getFullYear(), auxiliarFechaActual.getMonth(), auxiliarFechaActual.getDate());//.toLocaleDateString('en-GB');;
    //console.log(fechaActual)

    document.addEventListener("DOMContentLoaded", function () {
        hideLoader();

        // validando fechas al momento de ingresar la ultima de la seccion
        document.getElementById("AnioVenPas").addEventListener("blur", function () {
            banderaFecha0 = validaFechasCongruencia("ExpPas", "VenPas", mensaje0);
        });

        document.getElementById("Eventos_0__AnioFinEvento").addEventListener("blur", function (event) {
            banderaFecha1 = validaFechasCongruencia("InicioEvento", "FinEvento", mensaje1, 1);
        });

        document.getElementById("AnioSalida").addEventListener("blur", function () {
            banderaFechaOpcional = validaFechasCongruencia("Entrada", "Salida", mensaje2);
        });

        // validando que la fecha de ingreso al pais sea mayor/igual a la actual en la primer seccion
        document.getElementById("AnioEntrada").addEventListener("blur", function () {
            banderaFechaOpcional = validaFechasCongruencia("Entrada", "Salida", mensaje3,2);
        });

        // Llenado dinamico de fechas
        document.getElementById("DiaExpPas").addEventListener("blur", function (event) {
            dia = document.getElementById("DiaExpPas").value;
            document.getElementById("DiaVenPas").value = dia;
        });

        document.getElementById("MesExpPas").addEventListener("blur", function (event) {
            mes = document.getElementById("MesExpPas").value;
            document.getElementById("MesVenPas").value = mes;
        });

        document.getElementById("Eventos_0__DiaInicioEvento").addEventListener("blur", function (event) {
            dia = document.getElementById("Eventos_0__DiaInicioEvento").value;
            document.getElementById("Eventos_0__DiaFinEvento").value = dia;
        });

        document.getElementById("Eventos_0__MesInicioEvento").addEventListener("blur", function (event) {
            mes = document.getElementById("Eventos_0__MesInicioEvento").value;
            document.getElementById("Eventos_0__MesFinEvento").value = mes;
        });

        document.getElementById("DiaEntrada").addEventListener("blur", function (event) {
            dia = document.getElementById("DiaEntrada").value;
            document.getElementById("DiaSalida").value = dia;
        });

        document.getElementById("MesEntrada").addEventListener("blur", function (event) {
            dia = document.getElementById("MesEntrada").value;
            document.getElementById("MesSalida").value = dia;
        });


        //llenando las segundas fechas
        document.getElementById("frm-registro-invitado").addEventListener("submit", function (event) {
            event.preventDefault();
            banderaFecha0 = validaFechasCongruencia("ExpPas", "VenPas", mensaje0);
            banderaFecha1 = validaFechasCongruencia("InicioEvento", "FinEvento", mensaje1, 1);
            banderaFechaOpcional = validaFechasCongruencia("Entrada", "Salida", mensaje2);
            banderaFechaActual = validaFechasCongruencia("Entrada", "Salida", mensaje3, 2);

            console.log("Banderas : " + banderaFecha0 + "---" + banderaFecha1);
            /* formularioValido = true;*/
            //Si el formulario esta bien se muestra el formulario
            if (formularioValido && banderaFecha0 && banderaFecha1 && banderaFechaOpcional && banderaFechaActual) {
                console.log("ENTRE AL MODAL");
                let modal = document.getElementById("ventanaModal");
                modal.style.display = "block";
            }
            hideLoader();
        });
    });

    async function loadDateEvent(id) {

        try {
            const item = document.getElementById(id);
            const option = item.options[item.selectedIndex].value;
            const actualPosicion = id.replace(/[^0-9]+/g, "");

            let url = "@Url.Content("~/Home/ObtenerInfoEventoPorId")";

            let params =
            {
                idEvento: parseInt(option)
            };

            const response = httpPost(
                url,
                params
            );

            const dataResponse = await response
                .then(data => {
                    return data;
                })
                .catch(error => {
                    console.log(error);
                });

            // console.log(dataResponse);

            const fechaInicio = dataResponse.result.DATE_INI;
            const fechaFin = dataResponse.result.DATE_FIN;



            const destructurarFechaIni = fechaInicio.split('/');
            const destructurarFechaFin = fechaFin.split('/');

            // console.log(destructurarFechaIni, destructurarFechaFin)

            // Evento
            document.getElementById(`Eventos_${actualPosicion}__InmuebleEvento`).value = dataResponse.result.ID_ESTATE;
            document.getElementById(`Eventos_${actualPosicion}__UbicacionInmueble`).value = dataResponse.result.DESC_LOCATION;
            
            // llenado de inicio
            document.getElementById(`Eventos_${actualPosicion}__DiaInicioEvento`).value = destructurarFechaIni[1];
            document.getElementById(`Eventos_${actualPosicion}__MesInicioEvento`).value = destructurarFechaIni[0];

            const anioInicio = destructurarFechaIni[2].split(' ');
            document.getElementById(`Eventos_${actualPosicion}__AnioInicioEvento`).value = anioInicio[0];

            // llenado final
            document.getElementById(`Eventos_${actualPosicion}__DiaFinEvento`).value = destructurarFechaFin[1];
            document.getElementById(`Eventos_${actualPosicion}__MesFinEvento`).value = destructurarFechaFin[0];

            const anioFin = destructurarFechaFin[2].split(' ');
            document.getElementById(`Eventos_${actualPosicion}__AnioFinEvento`).value = anioFin[0];
        }
        catch(error)
        {
            console.log(error)
        }
    }

    function newEstate(id) {
        const item = document.getElementById(id);
        const option = item.options[item.selectedIndex].text;
        const actualPosicion = id.replace(/[^0-9]+/g, "");
        console.log(option);
        console.log("Actual posicion: " + actualPosicion);

        if (option == "OTRA") {
            console.log("entreee")
            const node = document.getElementById(`seccionNuevoInmueble_${actualPosicion}`).removeAttribute("hidden");
            console.log(node);
        }
    }

    function validaFechasCongruencia(seccionInicio, seccionFin, mensaje, flujo = 0) {
        //Ejemplo parametro:
        // seccionInicio = Dia(ExpPas), Mes(ExPas), Anio(ExPas)

        console.log("VALIDAR FECHAS");
        let diaInicio, mesInicio, anioInicio;
        let diaFin, mesFin, anioFin;

        if (flujo == 0 || flujo == 2) {
            diaInicio = document.getElementById(`Dia${seccionInicio}`);
            mesInicio = document.getElementById(`Mes${seccionInicio}`);
            anioInicio = document.getElementById(`Anio${seccionInicio}`);

            diaFin = document.getElementById(`Dia${seccionFin}`);
            mesFin = document.getElementById(`Mes${seccionFin}`);
            anioFin = document.getElementById(`Anio${seccionFin}`);
        } else {
            diaInicio = document.getElementById(`Eventos_0__Dia${seccionInicio}`);
            mesInicio = document.getElementById(`Eventos_0__Mes${seccionInicio}`);
            anioInicio = document.getElementById(`Eventos_0__Anio${seccionInicio}`);
            console.log(diaInicio);

            diaFin = document.getElementById(`Eventos_0__Dia${seccionFin}`);
            mesFin = document.getElementById(`Eventos_0__Mes${seccionFin}`);
            anioFin = document.getElementById(`Eventos_0__Anio${seccionFin}`);
        }

        const selectedInDiaPass = diaInicio.options[diaInicio.selectedIndex].text;
        const selectedInMesPass = mesInicio.options[mesInicio.selectedIndex].text;
        const selectedInAnioPass = anioInicio.options[anioInicio.selectedIndex].text;

        const selectedFinDia = diaFin.options[diaFin.selectedIndex].text;
        const selectedFinMes = mesFin.options[mesFin.selectedIndex].text;
        const selectedFinAnio = anioFin.options[anioFin.selectedIndex].text;

        const fechaInicialFormat = new Date(parseInt(selectedInAnioPass), parseInt(selectedInMesPass) - 1, parseInt(selectedInDiaPass));//.toLocaleDateString('en-GB');;

        const fechaFinalFormat = new Date(parseInt(selectedFinAnio), parseInt(selectedFinMes) - 1, parseInt(selectedFinDia));//.toLocaleDateString('en-GB');;
   
        if (flujo == 2) {
            console.log("ENTRE A LA NUEVA VALIDACION.........")
            console.log(fechaInicialFormat + "FECHA INGRESADA");
            console.log(fechaActual + "FECHA ACTUAL");
            if (fechaInicialFormat < fechaActual) {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: `${mensaje}`,
                    imageWidth: "40px",
                });
                return false;
            } else {
                console.log("TODO OK");
                return true;
            }
        } else {
            console.log("ENTRE A LA VALIDACION SENCILLA.........")
            console.log(fechaInicialFormat + "FECHA INGRESADA");
            console.log(fechaFinalFormat + "FECHA INGRESADA 2");
            if (fechaInicialFormat > fechaFinalFormat) {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: `${mensaje}`,
                    imageWidth: "40px",
                });
                return false;
            } else {
                console.log("TODO OK");
                return true;
            }
        }
        
    }



    function avisoPrivacidadCheckEvent() {
        let elementoCheck = document.getElementById("aceptaAvisoPrivacidad");
        let btn = document.getElementById("btnEnviarAvisoPrivacidad");
        if (elementoCheck.checked) {
            btn.disabled = false;
        }
        else {
            btn.disabled = true;
        }
    }

    function closeModal() {
        let modal = document.getElementById("ventanaModal");
        modal.style.display = "none";
    }

    async function enviarFormulario() {
        
        const btnEnviarAvisoPrivacidad = document.getElementById("btnEnviarAvisoPrivacidad");
        btnEnviarAvisoPrivacidad.disabled = true;
        showLoader();
        try {
            let formularioCompleto = false;
            let aceptaAvisoPrivacidad = document.getElementById('aceptaAvisoPrivacidad');

            if (aceptaAvisoPrivacidad.checked)
                formularioCompleto = true;
            else {
                let aviso = 'Debe aceptar la política de privacidad para continuar.';
                setAlertMessageForm(aviso, 'alertaPoliticaPrivacidad');
            }

            if (formularioCompleto) {
                if (req == "") {
                    let avisoc = 'El Captcha es necesario.';
                    setAlertMessageForm(avisoc, 'alertaPoliticaPrivacidad');
                    return;
                }
                //var obj = new Object{
                secret = "6LfuWfclAAAAALjIb8PP8E55g1zyis3Ic4kegdsM";
                //    response = req
                //};

                //let URL = "https://www.google.com/recaptcha/api/siteverify?secret=" + secret + "&response=" + req;

                //var serviceCaptcha = httpPost(URL);

                //var responseCaptcha = await serviceCaptcha.then(re => { return re; });

                //alert(responseCaptcha);


                let form = document.getElementById('frm-registro-invitado');
                let formJson = serializeForm(form);
                let url = "@Url.Content("~/Home/GuardaRegistroInvidato")";

                const response = httpPost(
                    url,
                    formJson
                );

                const dataResponse = await response
                    .then(data => {
                        return data;
                    })
                    .catch(error => {
                        console.log(error);
                        btnEnviarAvisoPrivacidad.disabled = false;
                    });

                if (dataResponse.response === false) {
                    let messageError = dataResponse.message;
                    setErrorMessageForm(messageError, 'messageErrorModal');
                    btnEnviarAvisoPrivacidad.disabled = false;
                }
                else {
                    //Escenario correccto, redireccionar
                    let urlResultado = dataResponse.href;
                    let params = {
                        NombreCompleto: dataResponse.result.NombreCompleto,
                        Codigo: dataResponse.result.Codigo
                    };
                    let methodNewView = 'POST';
                    postForm(urlResultado, params, methodNewView);
                }
            }
            else {
                btnEnviarAvisoPrivacidad.disabled = false;
            }
        }
        catch (error) {

        }
        finally {
            hideLoader();
        }
        

    }

    function validaCamposRequeridos() {
        let result = '';
        let NumeroPasaporte = document.getElementById("NumeroPasaporte") !== null ? document.getElementById("NumeroPasaporte").value : "-";
        //console.log(NumeroPasaporte);
        let DiaExpPas = document.getElementById("DiaExpPas") !== null ? document.getElementById("DiaExpPas").value : "-";
        //console.log(DiaExpPas);
        let MesExpPas = document.getElementById("MesExpPas") !== null ? document.getElementById("MesExpPas").value : "-";
        //console.log(MesExpPas);
        let AnioExpPas = document.getElementById("AnioExpPas") !== null ? document.getElementById("AnioExpPas").value : "-";
        //console.log(AnioExpPas);
        let DiaVenPas = document.getElementById("DiaVenPas") !== null ? document.getElementById("DiaVenPas").value : "-";
        //console.log(DiaVenPas);
        let MesVenPas = document.getElementById("MesVenPas") !== null ? document.getElementById("MesVenPas").value : "-";
        //console.log(MesVenPas);
        let AnioVenPas = document.getElementById("AnioVenPas") !== null ? document.getElementById("AnioVenPas").value : "-";
        //console.log(AnioVenPas);
        let Nacionalidad = document.getElementById("Nacionalidad") !== null ? document.getElementById("Nacionalidad").value : "-";
        //console.log(Nacionalidad);

        let Empresa = document.getElementById("Empresa").value;
        let Nombre = document.getElementById("Nombre").value;
        let Apellidos = document.getElementById("Apellidos").value;
        //let Sexo = document.getElementById("Sexo").value;
        let Correo = document.getElementById("Correo").value;
        let ConfirmacionCorreo = document.getElementById("ConfirmacionCorreo").value;

        const lenguajeAct = document.getElementById("IdiomaActual").value;
        if (Correo !== ConfirmacionCorreo)
            result += lenguajeAct === "ES" ? "<br>El correo debe ser igual a la confirmación del correo, " : "<br>The email must be the same as the confirmation email, ";

        let PaisNacimiento = document.getElementById("PaisNacimiento").value;

        //let ActividadPaisResidencia = document.getElementById("ActividadPaisResidencia").value;
        //let FueExpulsadoDeMexico = document.getElementById("FueExpulsadoDeMexico").value;
        //let AntecedentesPenalesEnMexico = document.getElementById("AntecedentesPenalesEnMexico").value;
        let ActividadEnMexico = document.getElementById("ActividadEnMexico").value;
        let NombreEvento = document.getElementById("Eventos_0__NombreEvento").value;
        let DiaInicioEvento = document.getElementById("Eventos_0__DiaInicioEvento").value;
        let MesInicioEvento = document.getElementById("Eventos_0__MesInicioEvento").value;
        let AnioInicioEvento = document.getElementById("Eventos_0__AnioInicioEvento").value;

        let InmuebleEvento = document.getElementById("Eventos_0__InmuebleEvento").value;
        let UbicacionInmueble = document.getElementById("Eventos_0__UbicacionInmueble").value;


        //let AeropuertoLlegada = document.getElementById("AeropuertoLlegada").value;
        //let Aerolinea = document.getElementById("Aerolinea").value;
        //let NumeroVuelo = document.getElementById("NumeroVuelo").value;

        let DiaEntrada = document.getElementById("DiaEntrada").value;
        let MesEntrada = document.getElementById("MesEntrada").value;
        let AnioEntrada = document.getElementById("AnioEntrada").value;
        let DiaSalida = document.getElementById("DiaSalida").value;
        let MesSalida = document.getElementById("MesSalida").value;
        let AnioSalida = document.getElementById("AnioSalida").value;



        if (isANullOrEmptyString(NumeroPasaporte)) {
            result += lenguajeAct === "ES" ? "<br>Número de Pasaporte, " : "<br>Passport Number, ";
        }
        if (isANullOrEmptyString(DiaExpPas)) {
            result += lenguajeAct === "ES" ? "<br>Fecha de Expedición de Pasaporte (Día), " :"<br>Passport Issuance Date (Day), ";
        }
        if (isANullOrEmptyString(MesExpPas)) {
            result += lenguajeAct === "ES" ? "<br>Fecha de Expedición de Pasaporte (Mes), " :"<br>Passport Issuance Date (Month), ";
        }
        if (isANullOrEmptyString(AnioExpPas)) {
            result += lenguajeAct === "ES" ? "<br>Fecha de Expedición de Pasaporte (Año), " :"<br>Passport Issuance Date (Year), ";
        }
        if (isANullOrEmptyString(DiaVenPas)) {
            result += lenguajeAct === "ES" ? "<br>Fecha de Vencimiento de Pasaporte (Día), " :"<br>Passport Due Date (Day), ";
        }
        if (isANullOrEmptyString(MesVenPas)) {
            result += lenguajeAct === "ES" ? "<br>Fecha de Vencimiento de Pasaporte (Mes), " :"<br>Passport Due Date (Month), ";
        }
        if (isANullOrEmptyString(AnioVenPas)) {
            result += lenguajeAct === "ES" ? "<br>Fecha de Vencimiento de Pasaporte (Año), " :"<br>Passport Due Date (Year), ";
        }
        if (isANullOrEmptyString(Nacionalidad)) {
            result += lenguajeAct === "ES" ? "<br>Nacionalidad (En Pasaporte), " :"<br>Nationality (In Passport), ";
        }
        if (isANullOrEmptyString(Empresa)) {
            result += lenguajeAct === "ES" ? "<br>Empresa, " :"<br>Company, ";
        }
        if (isANullOrEmptyString(Nombre)) {
            result += lenguajeAct === "ES" ? "<br>Nombre, ":"<br>Name, ";
        }
        if (isANullOrEmptyString(Apellidos)) {
            result += lenguajeAct === "ES" ? "<br>Apellidos, ":"<br>Lastname, ";
        }
        if (isANullOrEmptyString(Correo)) {
            result += lenguajeAct === "ES" ? "<br>Correo, ":"<br>Email, ";
        }
        if (isANullOrEmptyString(ConfirmacionCorreo)) {
            result += lenguajeAct === "ES" ? "<br>Confirmación de Correo, " :"<br>Confirm Email, ";
        }
        if (isANullOrEmptyString(PaisNacimiento)) {
            result += lenguajeAct === "ES" ? "<br>País de Nacimiento, " :"<br>Country of Birth, ";
        }

        if (isANullOrEmptyString(ActividadEnMexico)) {
            result += lenguajeAct === "ES" ? "<br>Actividad en México, " :"<br>Activity you will to do in México, ";
        }
        if (isANullOrEmptyString(NombreEvento)) {
            result += lenguajeAct === "ES" ? "<br>Nombre del Evento, " :"<br>Name of the Event, ";
        }
        if (isANullOrEmptyString(DiaInicioEvento)) {
            result += lenguajeAct === "ES" ? "<br>Fecha de Inicio del Evento (Día), " :"<br>Event Start Date (Day), ";
        }
        if (isANullOrEmptyString(MesInicioEvento)) {
            result += lenguajeAct === "ES" ? "<br>Fecha de Inicio del Evento (Mes), " :"<br>Event Start Date (Month), ";
        }
        if (isANullOrEmptyString(AnioInicioEvento)) {
            result += lenguajeAct === "ES" ? "<br>Fecha de Inicio del Evento (Año), " :"<br>Event Start Date (Year), ";
        }
        if (isANullOrEmptyString(InmuebleEvento)) {
            result += lenguajeAct === "ES" ? "<br>Inmueble del Evento, " :"<br>Event Property, ";
        }
        if (isANullOrEmptyString(UbicacionInmueble)) {
            result += lenguajeAct === "ES" ? "<br>Ubicacion del Inmueble, " :"<br>Event Venue, ";
        }



        if (isANullOrEmptyString(DiaEntrada)) {
            result += lenguajeAct === "ES" ? "<br>Fecha de Llegada (Día), " :"<br>Arrive Date (Day), ";
        }
        if (isANullOrEmptyString(MesEntrada)) {
            result += lenguajeAct === "ES" ? "<br>Fecha de Llegada (Mes), " :"<br>Arrive Date (Month), ";
        }
        if (isANullOrEmptyString(AnioEntrada)) {
            result += lenguajeAct === "ES" ? "<br>Fecha de Llegada (Año), " :"<br>Arrive Date (Year), ";
        }
        if (isANullOrEmptyString(DiaSalida)) {
            result += lenguajeAct === "ES" ? "<br>Fecha de Salida (Día), " :"<br>Departure Date (Day), ";
        }
        if (isANullOrEmptyString(MesSalida)) {
            result += lenguajeAct === "ES" ? "<br>Fecha de Salida (Mes), " :"<br>Departure Date (Month), ";
        }
        if (isANullOrEmptyString(AnioSalida)) {
            result += lenguajeAct === "ES" ? "<br>Fecha de Salida (Año), " :"<br>Departure Date (Year), ";
        }

        return result;
    }



    function validarEmpresaSeleccionada() {
        let valorEmpresaSeleccionada = document.getElementById("Empresa").value;
        let seccionNuevaEmpresa = document.getElementById("seccionNuevaEmpresa");
        // console.log(valorEmpresaSeleccionada);
        if (valorEmpresaSeleccionada === 'OTRA') {
            seccionNuevaEmpresa.style.display = 'block';

        }
        else {
            let nuevaEmpresa = document.getElementById("NuevaEmpresa");
            nuevaEmpresa.value = '';

            seccionNuevaEmpresa.style.display = 'none';

        }
    }

    function validarAeropuertoSeleccionada() {
        let valorAeropuertoLlegada = document.getElementById("AeropuertoLlegada").value;
        let seccionNuevoAeropuerto = document.getElementById("seccionNuevoAeropuerto");
        // console.log(valorEmpresaSeleccionada);
        if (valorAeropuertoLlegada === 'OTRA') {
            seccionNuevoAeropuerto.style.display = 'block';
        }
        else {
            let NuevoAeropuerto = document.getElementById("NuevoAeropuerto");
            NuevoAeropuerto.value = '';
            seccionNuevoAeropuerto.style.display = 'none';
        }
    }


    function validarAerolineaSeleccionada() {
        let valor = document.getElementById("Aerolinea").value;
        let seccion = document.getElementById("seccionNuevaAerolinea");
        // console.log(valorEmpresaSeleccionada);
        if (valor === 'OTRA') {
            seccion.style.display = 'block';
        }
        else {
            let NuevoElemento = document.getElementById("NuevaAerolinea");
            NuevoElemento.value = '';
            seccion.style.display = 'none';
        }
    }


    function validarInmuebleSeleccionado(indice) {
        indice = 0;
        console.log("indice recibido: " + indice);
        let valor = document.getElementById(`Eventos_${indice}__InmuebleEvento`).value;
        let seccion = document.getElementById(`seccionNuevoInmueble_${indice}`);
        // console.log(valorEmpresaSeleccionada);
        if (valor === 'OTRA') {
            seccion.style.display = 'block';

        }
        else {
            let NuevoElemento = document.getElementById(`Eventos_${indice}__NuevoInmuebleEvento`);
            NuevoElemento.value = '';
            seccion.style.display = 'none';
        }
    }

    function validarAntecedentesExpulsionSeleccionada() {
        let FueExpulsadoDeMexico = document.getElementById("FueExpulsadoDeMexico").value;
        let AntecedentesPenalesEnMexico = document.getElementById("AntecedentesPenalesEnMexico").value;

        let seccionAntecedentesExpulsion = document.getElementById("seccionAntecedentesExpulsion");
        // console.log(valorEmpresaSeleccionada);
        if (FueExpulsadoDeMexico === 'SI' || AntecedentesPenalesEnMexico === 'SI' || FueExpulsadoDeMexico === 'YES' || AntecedentesPenalesEnMexico === 'YES') {
            seccionAntecedentesExpulsion.style.display = 'block';

        }
        else {
            let ExplicacionAntecedentesExpulsion = document.getElementById("ExplicacionAntecedentesExpulsion");
            ExplicacionAntecedentesExpulsion.value = '';

            seccionAntecedentesExpulsion.style.display = 'none';

        }
    }

    function AgregaNuevoEvento() {
        const lenguajeAct = document.getElementById("IdiomaActual").value;
        const nombreBotonQuitarEvento = lenguajeAct == "ES" ? "Quitar Evento" : "Remove Event";
        const nombreEventoActual = lenguajeAct == "ES" ? "Nombre del Evento" : "Name of the Event";
        const inmuebleEvento = lenguajeAct == "ES" ? "Inmueble del Evento" : "Event Property";
        const ubicacionInmueble = lenguajeAct == "ES" ? "Ubicacion del Inmueble" : "Event Venue";
        const fechaInicioEventoLbl = lenguajeAct == "ES" ? "Fecha de Inicio del Evento" : "Event Start Date";
        const fechaFinEventoLbl = lenguajeAct == "ES" ? "Fecha de Fin del Evento" : "Event End Date";
        const dialbl = lenguajeAct == "ES" ? "Día" : "Day";
        const meslbl = lenguajeAct == "ES" ? "Mes" : "Month";
        const aniolbl = lenguajeAct == "ES" ? "Año" : "Year";
        // console.log("Entro a agregar nuevo evento");
        //Obtener los paneles actuales
        let currentEventsArr = document.querySelectorAll('[id^="panel_evento_"]');
        let currentEventsLength = currentEventsArr.length;
        let nextEventId = currentEventsLength;

        let newTagElement = `
                                        <div class="row">
                                            <div class="col-xs-12 col-sm-12 col-md-12">
                                                <div class="form-group">
                                                    <label>* ${nombreEventoActual}</label>
													<select class="form-control" id="Eventos_${nextEventId}__NombreEvento" name="Eventos[${nextEventId}].NombreEvento" required="required" style="position:initial" wtx-context="E79F8156-4935-4A60-862A-0E72462AED8E" onchange="loadDateEvent(id)">
														@Html.Raw(ViewBag.EventosOptionsHTML)
													</select>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-12 col-sm-12 col-md-12">
                                                <div class="form-group">
                                                    <label>* ${inmuebleEvento}</label>
													<select class="form-control" id="Eventos_${nextEventId}__InmuebleEvento" name="Eventos[${nextEventId}].InmuebleEvento" style="position:initial" wtx-context="00C8D930-EF5F-4FA9-A88D-E4CECCC7C974" onchange = "newEstate(id)">
														@Html.Raw(ViewBag.InmueblesOptionsHTML)
													</select>
												</div>

                                                 <div class="col-xs-12 col-sm-6 col-md-5" id="seccionNuevoInmueble_${nextEventId}" hidden>
                                                <div class="form-group">
                                                    <label>@Model.LabelInmueble</label>
                                                    <input type=text>
                                                </div>
                                            </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-12 col-sm-12 col-md-12">
                                                <div class="form-group">
                                                    <label>* ${ubicacionInmueble}</label>
                                                    <input class="form-control" id="Eventos_${nextEventId}__UbicacionInmueble" name="Eventos[${nextEventId}].UbicacionInmueble" type="text" value="" wtx-context="CC91F8CA-7582-4F2D-98CF-5510ADB2CF13">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-12 col-sm-12 col-md-3">
                                                <div class="form-group">
                                                    <label>${fechaInicioEventoLbl}</label>
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3 col-md-3">
                                                <div class="form-group">
                                                    <div class="input-group">
                                                        <span class="input-group-addon" id="basic-addon1">${dialbl}</span>
                                                        <select class="form-control" id="Eventos_${nextEventId}__DiaInicioEvento" name="Eventos[${nextEventId}].DiaInicioEvento" required="required" style="position:initial" wtx-context="CE141112-0B68-4E4E-AC68-DC0E5D43B658">
															@Html.Raw(ViewBag.DiasOptionsHTML)
														</select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3 col-md-3">
                                                <div class="form-group">
                                                    <div class="input-group">
                                                        <span class="input-group-addon" id="basic-addon1">${meslbl}</span>
														<select class="form-control" id="Eventos_${nextEventId}__MesInicioEvento" name="Eventos[${nextEventId}].MesInicioEvento" required="required" style="position:initial" wtx-context="24160B61-E83C-4115-89AD-542FC6827459">
															@Html.Raw(ViewBag.MesOptionsHTML)
														</select>
													</div>
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3 col-md-3">
                                                <div class="form-group">
                                                    <div class="input-group">
                                                        <span class="input-group-addon" id="basic-addon1">${aniolbl}</span>
														<select class="form-control" id="Eventos_${nextEventId}__AnioInicioEvento" name="Eventos[${nextEventId}].AnioInicioEvento" required="required" style="position:initial" wtx-context="0F1AE14B-4C43-4ADE-8E13-710E5E18A317">
															@Html.Raw(ViewBag.AniosOptionsHTML)
														</select>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                         <div class="row">
                                            <div class="col-xs-12 col-sm-12 col-md-3">
                                                <div class="form-group">
                                                    <label>${fechaFinEventoLbl}</label>
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3 col-md-3">
                                                <div class="form-group">
                                                    <div class="input-group">
                                                        <span class="input-group-addon" id="basic-addon1">${dialbl}</span>
                                                        <select class="form-control" id="Eventos_${nextEventId}__DiaFinEvento" name="Eventos[${nextEventId}].DiaFinEvento" required="required" style="position:initial" wtx-context="CE141112-0B68-4E4E-AC68-DC0E5D43B658">
															@Html.Raw(ViewBag.DiasOptionsHTML)
														</select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3 col-md-3">
                                                <div class="form-group">
                                                    <div class="input-group">
                                                        <span class="input-group-addon" id="basic-addon1">${meslbl}</span>
														<select class="form-control" id="Eventos_${nextEventId}__MesFinEvento" name="Eventos[${nextEventId}].MesFinEvento" required="required" style="position:initial" wtx-context="24160B61-E83C-4115-89AD-542FC6827459">
															@Html.Raw(ViewBag.MesOptionsHTML)
														</select>
													</div>
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-3 col-md-3">
                                                <div class="form-group">
                                                    <div class="input-group">
                                                        <span class="input-group-addon" id="basic-addon1">${aniolbl}</span>
														<select class="form-control" id="Eventos_${nextEventId}__AnioFinEvento" name="Eventos[${nextEventId}].AnioFinEvento" required="required" style="position:initial" wtx-context="0F1AE14B-4C43-4ADE-8E13-710E5E18A317">
															@Html.Raw(ViewBag.AniosOptionsHTML)
														</select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-12 col-md-12">
                                                    <button type="button" onclick="quitarEvento(this.id)" class="btn btn-success" id="btnQuitarEvento_${nextEventId}">${nombreBotonQuitarEvento}</button>
                                                </div>
                                            </div>
                                        </div>`;

        let newNode = document.createElement('div');
        newNode.id = `panel_evento_${nextEventId}`;
        newNode.className = 'panel panel-info';
        newNode.style = 'style="margin-right: 60px;';
        newNode.innerHTML = newTagElement;

        let contenedor = document.getElementById('eventsSection');
        contenedor.appendChild(newNode);
    }

    function quitarEvento(id) {
        const actualPosicion = id.replace(/[^0-9]+/g, "");
        const seccionEvento = document.getElementById(`panel_evento_${actualPosicion}`);
        seccionEvento.remove();
    }


    function soloPermiteNumeros(e) {
        // console.log(e.code);
        if (e.key === '0' || e.key === '1' || e.key === '2' || e.key === '3' || e.key === '4'
            || e.key === '5' || e.key === '6' || e.key === '7' || e.key === '8' || e.key === '9') {
            console.log("Se resiono un numero");
        }
        else {
            if (e.code !== 'Tab') {
                e.preventDefault();
                return false;
            }
        }
    }

</script>

<script src="https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit"
        async defer>
</script>